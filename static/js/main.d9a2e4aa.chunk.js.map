{"version":3,"sources":["libraries/services.js","components/TableType.jsx","components/DisplayTable.jsx","components/TypeElement.jsx","components/Wheel.jsx","components/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["API_URL","TableType","className","src","this","props","type","icon","alt","name","Component","DisplayTable","state","list1","list2","currValue","weaknesses","superEffective","effective","resistant","superResistant","typenames","forEach","value","push","typelist","parseWeaknesses","selectedWeaknesses","type1","type2","firstType","secondType","message","scope","map","index","TypeElement","onTypeSelect","isSelected","onClick","handleTypeSelect","Wheel","Main","getTypelist","getWeaknesses","url","fetch","Services","then","response","json","responseJson","types","names","reorderTypes","setState","newState","newType","calculateWeaknesses","currentWeakness","weaknesses1","weaknesses2","typeArray","typeOrder","ret","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9a2e4aa.chunk.js","sourcesContent":["const API_URL = 'https://temtem-api.mael.tech/api';\r\n\r\nexport function getWeaknesses() {\r\n    const url = `${API_URL}/weaknesses`;\r\n    return fetch(url);\r\n}\r\n\r\nexport function getTypes() {\r\n    const url = `${API_URL}/types`;\r\n    return fetch(url);\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class TableType extends Component {\r\n    render() {\r\n        return (\r\n            <li className=\"TableType\">\r\n                <img src={this.props.type.icon} alt=\"\"/>\r\n                <span>{this.props.type.name}</span>\r\n            </li>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport TableType from './TableType';\r\n\r\nexport default class DisplayTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //\r\n        }\r\n    }\r\n\r\n    parseWeaknesses(list1, list2) {\r\n        let weaknesses = {\r\n            superEffective: [],\r\n            effective: [],\r\n            resistant: [],\r\n            superResistant: []\r\n        };\r\n        let currValue;\r\n        this.props.typenames.forEach(name => {\r\n            if (list1[name] && list2[name]) {\r\n                currValue = list1[name].value * list2[name].value;\r\n            }\r\n            else if (list1[name]) currValue = list1[name].value;\r\n            else if (list2[name]) currValue = list2[name].value;\r\n            switch(currValue) {\r\n                case 4:\r\n                    weaknesses.superEffective.push(this.props.typelist[name]);\r\n                    break;\r\n                case 2:\r\n                    weaknesses.effective.push(this.props.typelist[name]);\r\n                    break;\r\n                case 0.5:\r\n                    weaknesses.resistant.push(this.props.typelist[name]);\r\n                    break;\r\n                case 0.25:\r\n                    weaknesses.superResistant.push(this.props.typelist[name]);\r\n                    break;\r\n                default:\r\n                    //\r\n            }\r\n        });\r\n        return weaknesses;\r\n    }\r\n\r\n    render() {\r\n        let weaknesses = this.parseWeaknesses(this.props.selectedWeaknesses.type1, this.props.selectedWeaknesses.type2);\r\n        if (!this.props.firstType && !this.props.secondType) {\r\n            return (\r\n                <section className=\"DisplayTable\">\r\n                    <p>Select Temtem types...</p>\r\n                </section>\r\n            )\r\n        }\r\n        else {\r\n            let message = \"\";\r\n            if (!this.props.secondType) {\r\n                message = `${this.props.firstType.name} takes:`;\r\n            }\r\n            else if (!this.props.firstType) {\r\n                message = `${this.props.secondType.name} takes:`;\r\n            }\r\n            else {\r\n                message = `${this.props.firstType.name}/${this.props.secondType.name} takes:`;\r\n            }\r\n            return (\r\n                <section className=\"DisplayTable\">\r\n                    <h2>{message}</h2>\r\n                    <table>\r\n                        <tbody>\r\n                        <tr>\r\n                                <th scope=\"row\">\r\n                                    <span>4x from</span>\r\n                                </th>\r\n                                <td>\r\n                                    <ul>\r\n                                        {weaknesses.superEffective.map((type, index) => (\r\n                                            <TableType \r\n                                                key = {index}\r\n                                                type = {type}\r\n                                            />\r\n                                        ))}\r\n                                    </ul>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">\r\n                                    <span>2x from</span>\r\n                                </th>\r\n                                <td>\r\n                                    <ul>\r\n                                        {weaknesses.effective.map((type, index) => (\r\n                                            <TableType \r\n                                                key = {index}\r\n                                                type = {type}\r\n                                            />\r\n                                        ))}\r\n                                    </ul>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">\r\n                                    <span>0.5x from</span>\r\n                                </th>\r\n                                <td>\r\n                                    <ul>\r\n                                        {weaknesses.resistant.map((type, index) => (\r\n                                            <TableType \r\n                                                key = {index}\r\n                                                type = {type}\r\n                                            />\r\n                                        ))}\r\n                                    </ul>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">\r\n                                    <span>0.25x from</span>\r\n                                </th>\r\n                                <td>\r\n                                    <ul>\r\n                                        {weaknesses.superResistant.map((type, index) => (\r\n                                            <TableType \r\n                                                key = {index}\r\n                                                type = {type}\r\n                                            />\r\n                                        ))}\r\n                                    </ul>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </section>\r\n            );\r\n        }\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class TypeElement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //\r\n        };\r\n    }\r\n\r\n    handleTypeSelect() {\r\n        let type = this.props.name;\r\n        this.props.onTypeSelect(type);\r\n    }\r\n\r\n    render() {\r\n        let isSelected = false;\r\n        if (this.props.firstType && (this.props.firstType.name === this.props.name)) isSelected = true;\r\n        else if (this.props.secondType && (this.props.secondType.name === this.props.name)) isSelected = true;\r\n        return (\r\n            <li className={(isSelected ? \"selected \" : \"\") + \"TypeElement\"} onClick={() => this.handleTypeSelect()}>\r\n                <img src={this.props.icon} alt={this.props.name + \" icon\"}/>\r\n                <p>{this.props.name}</p>\r\n            </li>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport TypeElement from './TypeElement';\r\n\r\nexport default class Wheel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"Wheel\">\r\n                <ul>\r\n                    {this.props.typelist\r\n                        .map((type, index) => (\r\n                            <TypeElement \r\n                                key = {index}\r\n                                name = {type.name}\r\n                                icon = {type.icon}\r\n                                onTypeSelect = {type=>this.props.onTypeSelect(type)}\r\n                                firstType = {this.props.firstType}\r\n                                secondType = {this.props.secondType}\r\n                            />\r\n                        ))}\r\n                </ul>\r\n            </section>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport * as Services from \"../libraries/services\";\r\nimport DisplayTable from \"./DisplayTable\";\r\nimport Wheel from './Wheel';\r\n\r\nexport default class Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            typelist: [],\r\n            typenames: [],\r\n            weaknesses: [],\r\n            firstType: null,\r\n            secondType: null,\r\n            selectedWeaknesses: {\r\n                type1: [],\r\n                type2: []\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTypelist();\r\n        this.getWeaknesses();\r\n    }\r\n\r\n    getTypelist() {\r\n        Services.getTypes().then(\r\n            (response)=>{\r\n              return response.json();\r\n        })\r\n        .then(\r\n            (responseJson)=>{\r\n                let types = [];\r\n                let names = [];\r\n                responseJson.forEach(type => {\r\n                    type.icon = 'https://temtem-api.mael.tech' + type.icon;\r\n                    responseJson[type.name] = type;\r\n                    names.push(type.name);\r\n                });\r\n                types = this.reorderTypes(responseJson);\r\n                this.setState({typelist: types, typenames: names});\r\n            }\r\n        );\r\n    }\r\n\r\n    getWeaknesses() {\r\n        Services.getWeaknesses().then(\r\n            (response)=>{\r\n              return response.json();\r\n        })\r\n        .then(\r\n            (responseJson)=>{\r\n                this.setState({ weaknesses: responseJson });\r\n            }\r\n        );\r\n    }\r\n\r\n    onTypeSelect(type) {\r\n        let firstType = this.state.firstType;\r\n        let secondType = this.state.secondType;\r\n        let newState = {};\r\n        if (firstType && secondType) {\r\n            if (type !== firstType.name && type !== secondType.name) return;\r\n            newState = type === firstType.name ? {firstType: null} : {secondType: null};\r\n        }\r\n        else {\r\n            let newType = this.state.typelist[type];\r\n            if (!firstType && !secondType) newState = {firstType: newType};\r\n            else if (firstType) {\r\n                newState = type === firstType.name ? {firstType: null} : {secondType: newType};\r\n            }\r\n            else {\r\n                newState = type === secondType.name ? {secondType: null} : {firstType: newType};\r\n            }\r\n        }\r\n        this.setState(newState, function() {\r\n            this.calculateWeaknesses();\r\n        });\r\n    }\r\n\r\n    calculateWeaknesses() {\r\n        let type1 = this.state.firstType;\r\n        let type2 = this.state.secondType;\r\n        let weaknesses1 = [];\r\n        let weaknesses2 = [];\r\n        let currentWeakness;\r\n        if (type1) {\r\n            this.state.typenames.forEach(name => {\r\n                currentWeakness = {name: name, value: this.state.weaknesses[name][type1.name]};\r\n                weaknesses1.push(currentWeakness);\r\n                weaknesses1[name] = currentWeakness;\r\n            });\r\n        }\r\n        if (type2) {\r\n            this.state.typenames.forEach(name => {\r\n                currentWeakness = {name: name, value: this.state.weaknesses[name][type2.name]};\r\n                weaknesses2.push(currentWeakness);\r\n                weaknesses2[name] = currentWeakness;\r\n            });\r\n        }\r\n        this.setState({selectedWeaknesses: {type1: weaknesses1, type2: weaknesses2}});\r\n    }\r\n\r\n    reorderTypes(typeArray) {\r\n        let typeOrder = {'Neutral': 0, 'Toxic': 1, 'Mental': 2, 'Crystal': 3, 'Fire': 4, 'Melee': 5, 'Electric': 6, 'Nature': 7, 'Wind': 8, 'Water': 9, 'Digital': 10, 'Earth': 11};\r\n        let ret = [];\r\n        let index;\r\n        typeArray.forEach(type => {\r\n            index = typeOrder[type.name];\r\n            ret[index] = type;\r\n            ret[type.name] = type;\r\n        });\r\n        return ret;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main>\r\n                <h1>Welcome to Temtypes!</h1>\r\n                <Wheel typelist={this.state.typelist} onTypeSelect={type=>this.onTypeSelect(type)} firstType={this.state.firstType} secondType={this.state.secondType} />\r\n                <DisplayTable firstType={this.state.firstType} secondType={this.state.secondType} selectedWeaknesses={this.state.selectedWeaknesses} typelist={this.state.typelist} typenames={this.state.typenames}/>\r\n            </main>\r\n        );\r\n    }\r\n}","import './App.css';\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}